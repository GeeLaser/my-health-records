{"version":3,"sources":["utils/constants.js","components/Login/login.js","components/App.js","components/Header.js","components/FilesList.js","router/AppRouter.js","index.js"],"names":["API_URL","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","useState","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","className","onSubmit","type","onChange","target","value","App","props","file","setFile","previewSrc","setPreviewSrc","title","description","state","setState","errorMsg","setErrorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","useRef","handleInputChange","event","name","updateBorder","dragState","current","style","border","handleOnSubmit","trim","formData","FormData","append","axios","post","history","push","response","Fragment","Form","Row","Col","Group","controlId","Control","placeholder","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","match","onDragEnter","onDragLeave","getRootProps","getInputProps","ref","src","alt","Button","variant","Header","activeClassName","to","exact","FilesList","filesList","setFilesList","useEffect","get","getFilesList","downloadFile","id","path","mimetype","responseType","split","filename","length","download","status","deleteFile","delete","console","log","res","map","_id","file_path","file_mimetype","key","href","onClick","colSpan","fontWeight","action","enctype","class","multiple","AppRouter","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c597f42.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:3030';\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\n\r\nasync function loginUser(credentials) {\r\n return fetch('http://localhost:3030/login', {\r\n   method: 'POST',\r\n   headers: {\r\n     'Content-Type': 'application/json'\r\n   },\r\n   body: JSON.stringify(credentials)\r\n })\r\n   .then(data => data.json())\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    setToken(token);\r\n  }\r\n\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Please Log In</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\" onChange={e => setUserName(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n};","import React, { useState, useRef } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { API_URL } from '../utils/constants';\r\nimport Login from '../components/Login/login';\r\n\r\nconst App = (props) => {\r\n  \r\n  const [file, setFile] = useState(null); // state for storing actual image\r\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    description: ''\r\n  });\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\r\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n  const [token, setToken] = useState();\r\n\r\n  if(!token) {\r\n    return <Login setToken={setToken} />\r\n  }\r\n  \r\n  const handleInputChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onDrop = (files) => {\r\n    const [uploadedFile] = files;\r\n    setFile(uploadedFile);\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n    dropRef.current.style.border = '2px dashed #e9ebeb';\r\n  };\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === 'over') {\r\n      dropRef.current.style.border = '2px solid #000';\r\n    } else if (dragState === 'leave') {\r\n      dropRef.current.style.border = '2px dashed #e9ebeb';\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { title, description } = state;\r\n      if (title.trim() !== '' && description.trim() !== '') {\r\n        if (file) {\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('title', title);\r\n          formData.append('description', description);\r\n\r\n          setErrorMsg('');\r\n          await axios.post(`${API_URL}/upload`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n          props.history.push('/list');\r\n        } else {\r\n          setErrorMsg('Please select a file to add.');\r\n        }\r\n      } else {\r\n        setErrorMsg('Please enter all the field values.');\r\n      }\r\n    } catch (error) {\r\n      error.response && setErrorMsg(error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={state.title || ''}\r\n                placeholder=\"Enter title\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={state.description || ''}\r\n                placeholder=\"Enter description\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"upload-section\">\r\n          <Dropzone\r\n            onDrop={onDrop}\r\n            onDragEnter={() => updateBorder('over')}\r\n            onDragLeave={() => updateBorder('leave')}\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag and drop a file OR click here to select a file</p>\r\n                {file && (\r\n                  <div>\r\n                    <strong>Selected file:</strong> {file.name}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n          {previewSrc ? (\r\n            isPreviewAvailable ? (\r\n              <div className=\"image-preview\">\r\n                <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\r\n              </div>\r\n            ) : (\r\n              <div className=\"preview-message\">\r\n                <p>No preview available for this file</p>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className=\"preview-message\">\r\n              <p>Image preview will be shown here after selection</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>File Upload And Download</h1>\r\n      <nav>\r\n        <NavLink activeClassName=\"active\" to=\"/\" exact={true}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink activeClassName=\"active\" to=\"/list\">\r\n          Files List\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport download from 'downloadjs';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../utils/constants';\r\nimport Login from '../components/Login/login';\r\n\r\nconst FilesList = () => {\r\n  const [filesList, setFilesList] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [token, setToken] = useState();\r\n\r\n  \r\n  useEffect(() => {\r\n    const getFilesList = async () => {\r\n      try {\r\n        const { data } = await axios.get(`${API_URL}/getAllFiles`);\r\n        setErrorMsg('');\r\n        setFilesList(data);\r\n      } catch (error) {\r\n        error.response && setErrorMsg(error.response.data);\r\n      }\r\n    };\r\n\r\n    getFilesList();\r\n  }, []);\r\n\r\n  if(!token) {\r\n    return <Login setToken={setToken} />\r\n  }\r\n\r\n  const downloadFile = async (id, path, mimetype) => {\r\n    try {\r\n      const result = await axios.get(`${API_URL}/download/${id}`, {\r\n        responseType: 'blob'\r\n      });\r\n      const split = path.split('/');\r\n      const filename = split[split.length - 1];\r\n      setErrorMsg('');\r\n      return download(result.data, filename, mimetype);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrorMsg('Error while downloading file. Try again later');\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteFile = async (id) => {\r\n    try {\r\n      const res = await axios.delete(`${API_URL}/delete/${id}`)\r\n      .then (response => {\r\n        if(response.status === 'error'){\r\n          console.log('err');\r\n        } else axios.get(`${API_URL}/files`);\r\n      });\r\n      \r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"files-container\">\r\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n      <table className=\"files-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Download File</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filesList.length > 0 ? (\r\n            filesList.map(\r\n              ({ _id, title, description, file_path, file_mimetype }) => (\r\n                <tr key={_id}>\r\n                  <td className=\"file-title\">{title}</td>\r\n                  <td className=\"file-description\">{description}</td>\r\n                  <td>\r\n                    <a\r\n                      href=\"#/\"\r\n                      onClick={() =>\r\n                        downloadFile(_id, file_path, file_mimetype)\r\n                      }\r\n                    >\r\n                      Download / \r\n                    </a>\r\n                    <a\r\n                      href=\"#/\"\r\n                      onClick={() =>\r\n                        deleteFile(_id)\r\n                      }\r\n                    >\r\n                      Delete\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={3} style={{ fontWeight: '300' }}>\r\n                No files found. Please add some.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\" >\r\n      <div class=\"file-field input-field\">\r\n        <div class=\"btn grey\">\r\n          <span>File</span>\r\n          <input name=\"myImage\" type=\"file\" multiple=\"multiple\"/> \r\n        </div>\r\n        <div class=\"file-path-wrapper\">\r\n          <input class=\"file-path validate\" type=\"text\"/>\r\n        </div>\r\n\r\n      </div>      \r\n      <button type=\"submit\" class=\"btn\">Submit</button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilesList;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport Header from '../components/Header';\r\nimport FilesList from '../components/FilesList';\r\n\r\n\r\nconst AppRouter = () => (\r\n  <BrowserRouter>\r\n    <div className=\"container\">\r\n      <Header />\r\n      <div className=\"main-content\">\r\n        <Switch>\r\n          <Route component={App} path=\"/\" exact={true} />\r\n          <Route component={FilesList} path=\"/list\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from './router/AppRouter';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.scss';\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById('root'));\r\n"],"sourceRoot":""}